name: Build Resume and Cover Letter

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Emacs
      uses: purcell/setup-emacs@master
      with:
        version: 29.1
        
    - name: Install TeXLive
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-full
        
    - name: Install org-mode and dependencies
      run: |
        emacs --batch --eval "(require 'package)" \
              --eval "(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)" \
              --eval "(package-initialize)" \
              --eval "(package-refresh-contents)" \
              --eval "(package-install 'org)" \
              --eval "(package-install 'ox-latex)"
              
    - name: Create output directory
      run: mkdir -p dist
      
    - name: Export resume to PDF
      run: |
        emacs --batch resume.org \
              --eval "(require 'ox-latex)" \
              --eval "(setq org-confirm-babel-evaluate nil)" \
              --eval "(setq org-latex-pdf-process '(\"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f\" \"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f\"))" \
              --eval "(org-latex-export-to-pdf)" \
              --eval "(copy-file \"resume.pdf\" \"dist/ShreyasRagavan-Resume.pdf\" t)"
              
    - name: Export resume to HTML
      run: |
        emacs --batch resume.org \
              --eval "(require 'ox-html)" \
              --eval "(setq org-confirm-babel-evaluate nil)" \
              --eval "(setq org-html-head-include-default-style nil)" \
              --eval "(org-html-export-to-html)" \
              --eval "(copy-file \"resume.html\" \"dist/ShreyasRagavan-Resume.html\" t)"
              
    - name: Export cover letter to PDF
      run: |
        emacs --batch cover-letter.org \
              --eval "(require 'ox-latex)" \
              --eval "(setq org-confirm-babel-evaluate nil)" \
              --eval "(setq org-latex-pdf-process '(\"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f\" \"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f\"))" \
              --eval "(org-latex-export-to-pdf)" \
              --eval "(copy-file \"cover-letter.pdf\" \"dist/ShreyasRagavan-CoverLetter.pdf\" t)"
              
    - name: Export cover letter to HTML
      run: |
        emacs --batch cover-letter.org \
              --eval "(require 'ox-html)" \
              --eval "(setq org-confirm-babel-evaluate nil)" \
              --eval "(setq org-html-head-include-default-style nil)" \
              --eval "(org-html-export-to-html)" \
              --eval "(copy-file \"cover-letter.html\" \"dist/ShreyasRagavan-CoverLetter.html\" t)"
              
    - name: Upload PDF artifacts
      uses: actions/upload-artifact@v4
      with:
        name: resume-pdfs
        path: |
          dist/*.pdf
          dist/*.html
        retention-days: 90
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        
    - name: Create release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Resume Build ${{ github.run_number }}
        files: |
          dist/ShreyasRagavan-Resume.pdf
          dist/ShreyasRagavan-CoverLetter.pdf
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}